<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PangeaCyber.Net</name>
    </assembly>
    <members>
        <member name="T:PangeaCyber.Net.Audit.arweave.ArweaveRequest">
            <kind>class</kind>
            <summary>
            ArweaveRequest
            </summary>
        </member>
        <member name="P:PangeaCyber.Net.Audit.arweave.ArweaveRequest.query">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.arweave.ArweaveRequest.#ctor(System.String)">
            
        </member>
        <member name="T:PangeaCyber.Net.Audit.arweave.Arweave">
            <kind>class</kind>
            <summary>
            Arweave
            </summary>
        </member>
        <member name="F:PangeaCyber.Net.Audit.arweave.Arweave.BaseURL">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.arweave.Arweave.TreeName">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.arweave.Arweave.#ctor(System.String)">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.arweave.Arweave.GetPublishedRoots(System.Int32[])">
            
        </member>
        <member name="T:PangeaCyber.Net.Audit.arweave.GraphqlOutput">
            <kind>class</kind>
            <summary>
            GraphqlOutput
            </summary>
        </member>
        <member name="P:PangeaCyber.Net.Audit.arweave.GraphqlOutput.Data">
            
        </member>
        <member name="T:PangeaCyber.Net.Audit.arweave.Data">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.arweave.Data.Transactions">
            
        </member>
        <member name="T:PangeaCyber.Net.Audit.arweave.Transactions">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.arweave.Transactions.Edges">
            
        </member>
        <member name="T:PangeaCyber.Net.Audit.arweave.Edge">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.arweave.Edge.Node">
            
        </member>
        <member name="T:PangeaCyber.Net.Audit.arweave.Node">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.arweave.Node.ID">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.arweave.Node.Tags">
            
        </member>
        <member name="T:PangeaCyber.Net.Audit.arweave.Tag">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.arweave.Tag.Name">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.arweave.Tag.Value">
            
        </member>
        <member name="T:PangeaCyber.Net.Audit.arweave.PublishedRoot">
            <kind>class</kind>
            <summary>
            PublishedRoot
            </summary>
        </member>
        <member name="P:PangeaCyber.Net.Audit.arweave.PublishedRoot.Size">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.arweave.PublishedRoot.RootHash">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.arweave.PublishedRoot.PublishedAt">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.arweave.PublishedRoot.ConsistencyProof">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.arweave.PublishedRoot.Source">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.arweave.PublishedRoot.#ctor">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.arweave.PublishedRoot.#ctor(System.Int32,System.String,System.String,System.String[],System.String)">
            
        </member>
        <member name="T:PangeaCyber.Net.Audit.AuditClient">
            <kind>class</kind>
            <summary>
            Audit Client
            </summary>
        </member>
        <member name="P:PangeaCyber.Net.Audit.AuditClient.ServiceName">
            
        </member>
        <member name="F:PangeaCyber.Net.Audit.AuditClient.supportMultiConfig">
            
        </member>
        <member name="F:PangeaCyber.Net.Audit.AuditClient.signer">
            
        </member>
        <member name="F:PangeaCyber.Net.Audit.AuditClient.publishedRoots">
            
        </member>
        <member name="F:PangeaCyber.Net.Audit.AuditClient.allowServerRoots">
            
        </member>
        <member name="F:PangeaCyber.Net.Audit.AuditClient.prevUnpublishedRoot">
            
        </member>
        <member name="F:PangeaCyber.Net.Audit.AuditClient.tenantID">
            
        </member>
        <member name="F:PangeaCyber.Net.Audit.AuditClient.customSchemaClass">
            
        </member>
        <member name="F:PangeaCyber.Net.Audit.AuditClient.pkInfo">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.AuditClient.#ctor(PangeaCyber.Net.Audit.AuditClient.Builder)">
            Constructor
        </member>
        <member name="M:PangeaCyber.Net.Audit.AuditClient.Log(PangeaCyber.Net.Audit.IEvent,PangeaCyber.Net.Audit.LogConfig)">
            <kind>method</kind>
            <summary>
            Log an event to Audit Secure Log. By default does not sign event and verbose is left as server default
            </summary>
            <remarks>Log an entry</remarks>
            <param name="evt" type="PangeaCyber.Net.Audit.IEvent">Event to log</param>
            <param name="config">Include verbosity, local signature and verify events setup</param>
            <returns>Response&lt;LogResult&gt;</returns>
            <exception cref="T:PangeaCyber.Net.Exceptions.PangeaException"></exception>
            <exception cref="T:PangeaCyber.Net.Exceptions.PangeaAPIException"></exception>
            <example>
            <code>
            string msg = "Event's message";
            Event event = new Event.Builder(msg).Build();
            var response = await client.log(event, new LogConfig.Builder().Build());
            </code>
            </example>
        </member>
        <member name="M:PangeaCyber.Net.Audit.AuditClient.GetRoot">
            <kind>method</kind>
            <summary>Get last root from Pangea Server</summary>
            <remarks>Get last root</remarks>
            <returns>Response&lt;RootResult&gt;</returns>
            <exception cref="T:PangeaCyber.Net.Exceptions.PangeaException"></exception>
            <exception cref="T:PangeaCyber.Net.Exceptions.PangeaAPIException"></exception>
            <example>
            <code>
            var response = await client.GetRoot();
            </code>
            </example>
        </member>
        <member name="M:PangeaCyber.Net.Audit.AuditClient.GetRoot(System.Nullable{System.Int32})">
            <kind>method</kind>
            <summary>Get last root from Pangea Server</summary>
            <remarks>Get root from three of treeSize from Pangea Server</remarks>
            <param name="treeSize" type="System.Int32">tree size to get root</param>
            <returns>Response&lt;RootResult&gt;</returns>
            <exception cref="T:PangeaCyber.Net.Exceptions.PangeaException"></exception>
            <exception cref="T:PangeaCyber.Net.Exceptions.PangeaAPIException"></exception>
            <example>
            <code>
            var response = await client.GetRoot(treeSize);
            </code>
            </example>
        </member>
        <member name="M:PangeaCyber.Net.Audit.AuditClient.Search(PangeaCyber.Net.Audit.SearchRequest,PangeaCyber.Net.Audit.SearchConfig)">
            <kind>method</kind>
            <summary>Perform a search of logs according to input param. By default verify logs consistency and events hash and signature.</summary>
            <remarks>Search</remarks>
            <param name="request">Request to be sent to /search endpoint</param>
            <param name="config">Config include event and consistency verification setup</param>
            <returns>Response&lt;SearchOutput&gt;</returns>
            <exception cref="T:PangeaCyber.Net.Exceptions.PangeaException"></exception>
            <exception cref="T:PangeaCyber.Net.Exceptions.PangeaAPIException"></exception>
            <example>
            <code>
            var input = new SearchInput("message:Integration test msg");
            input.setMaxResults(10);
            var response = Client.Search(input);
            </code>
            </example>
        </member>
        <member name="M:PangeaCyber.Net.Audit.AuditClient.Results(PangeaCyber.Net.Audit.ResultRequest,PangeaCyber.Net.Audit.SearchConfig)">
            <kind>method</kind>
            <summary>Return result's page from search id.</summary>
            <remarks>Results</remarks>
            <param name="request">Request to be sent to /results endpoint</param>
            <param name="config">Config include event and consistency verification setup</param>
            <returns>Response&lt;ResultsOutput&gt;</returns>
            <exception cref="T:PangeaCyber.Net.Exceptions.PangeaException"></exception>
            <exception cref="T:PangeaCyber.Net.Exceptions.PangeaAPIException"></exception>
        </member>
        <member name="T:PangeaCyber.Net.Audit.AuditClient.Builder">
            <kind>class</kind>
            <summary>
            AuditClient Builder
            </summary>
        </member>
        <member name="F:PangeaCyber.Net.Audit.AuditClient.Builder.privateKeyFilename">
            
        </member>
        <member name="F:PangeaCyber.Net.Audit.AuditClient.Builder.tenantID">
            
        </member>
        <member name="F:PangeaCyber.Net.Audit.AuditClient.Builder.customSchemaClass">
            
        </member>
        <member name="F:PangeaCyber.Net.Audit.AuditClient.Builder.pkInfo">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.AuditClient.Builder.#ctor(PangeaCyber.Net.Config)">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.AuditClient.Builder.WithPrivateKey(System.String)">
            Add a private key in case want to use local signature
        </member>
        <member name="M:PangeaCyber.Net.Audit.AuditClient.Builder.WithTenantID(System.String)">
            Add a tenant ID to be sent in each logged event
        </member>
        <member name="M:PangeaCyber.Net.Audit.AuditClient.Builder.WithCustomSchema``1">
            Setup user custom schema 
        </member>
        <member name="M:PangeaCyber.Net.Audit.AuditClient.Builder.WithPKInfo(System.Collections.Generic.Dictionary{System.String,System.String})">
            Add extra public key information
        </member>
        <member name="M:PangeaCyber.Net.Audit.AuditClient.Builder.Build">
            Build an AuditClient
        </member>
        <member name="T:PangeaCyber.Net.Audit.EventEnvelope">
            <kind>class</kind>
            <summary>
            EventEnvelope
            </summary>
        </member>
        <member name="P:PangeaCyber.Net.Audit.EventEnvelope.Event">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.EventEnvelope.Signature">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.EventEnvelope.PublicKey">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.EventEnvelope.ReceivedAt">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.EventEnvelope.#ctor(PangeaCyber.Net.Audit.IEvent,System.String,System.String,System.String)">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.EventEnvelope.VerifySignature">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.EventEnvelope.FromRaw(System.Collections.Generic.Dictionary{System.String,System.Object},System.Type)">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.EventEnvelope.VerifyHash(System.Object,System.String)">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.EventEnvelope.Canonicalize(System.Object)">
            
        </member>
        <member name="T:PangeaCyber.Net.Audit.IEvent">
            <kind>class</kind>
            <summary>
            Event
            </summary>
        </member>
        <member name="P:PangeaCyber.Net.Audit.IEvent.TenantID">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.IEvent.SetTenantID(System.String)">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.IEvent.GetTenantID">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.IEvent.Canonicalize(PangeaCyber.Net.Audit.IEvent)">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.IEvent.FromRaw(System.Object,System.Type)">
            
        </member>
        <member name="T:PangeaCyber.Net.Audit.LogConfig">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.LogConfig.SignLocal">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.LogConfig.Verify">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.LogConfig.Verbose">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.LogConfig.#ctor(PangeaCyber.Net.Audit.LogConfig.Builder)">
            
        </member>
        <member name="T:PangeaCyber.Net.Audit.LogConfig.Builder">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.LogConfig.Builder.SignLocal">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.LogConfig.Builder.Verify">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.LogConfig.Builder.Verbose">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.LogConfig.Builder.#ctor">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.LogConfig.Builder.WithSignLocal(System.Boolean)">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.LogConfig.Builder.WithVerify(System.Boolean)">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.LogConfig.Builder.WithVerbose(System.Boolean)">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.LogConfig.Builder.Build">
            
        </member>
        <member name="T:PangeaCyber.Net.Audit.LogSigner">
            <kind>enum</kind>
            <summary>
            LogSigner
            </summary>
        </member>
        <member name="F:PangeaCyber.Net.Audit.LogSigner.PrivateKeyFilename">
            
        </member>
        <member name="F:PangeaCyber.Net.Audit.LogSigner.PrivateKey">
            
        </member>
        <member name="F:PangeaCyber.Net.Audit.LogSigner.PublicKey">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.LogSigner.#ctor(System.String)">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.LogSigner.Sign(System.String)">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.LogSigner.GetPublicKey">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.LogSigner.GetAlgorithm">
            
        </member>
        <member name="T:PangeaCyber.Net.Audit.Root">
            <kind>class</kind>
            <summary>
            Root
            </summary>
        </member>
        <member name="P:PangeaCyber.Net.Audit.Root.TreeName">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.Root.Size">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.Root.RootHash">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.Root.URL">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.Root.PublishedAt">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.Root.ConsistencyProof">
            
        </member>
        <member name="T:PangeaCyber.Net.Audit.SearchConfig">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.SearchConfig.VerifyConsistency">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.SearchConfig.VerifyEvents">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.SearchConfig.#ctor(PangeaCyber.Net.Audit.SearchConfig.Builder)">
            
        </member>
        <member name="T:PangeaCyber.Net.Audit.SearchConfig.Builder">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.SearchConfig.Builder.VerifyConsistency">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.SearchConfig.Builder.VerifyEvents">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.SearchConfig.Builder.#ctor">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.SearchConfig.Builder.WithVerifyConsistency(System.Boolean)">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.SearchConfig.Builder.WithVerifyEvents(System.Boolean)">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.SearchConfig.Builder.Build">
            
        </member>
        <member name="T:PangeaCyber.Net.Audit.SearchEvent">
            <kind>class</kind>
            <summary>
            SearchEvent
            </summary>
        </member>
        <member name="P:PangeaCyber.Net.Audit.SearchEvent.RawEnvelope">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.SearchEvent.EventEnvelope">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.SearchEvent.Hash">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.SearchEvent.LeafIndex">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.SearchEvent.MembershipProof">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.SearchEvent.Published">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.SearchEvent.MembershipVerification">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.SearchEvent.ConsistencyVerification">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.SearchEvent.SignatureVerification">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.SearchEvent.VerifySignature">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.SearchEvent.VerifyConsistency(System.Collections.Generic.Dictionary{System.Int32,PangeaCyber.Net.Audit.arweave.PublishedRoot})">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.SearchEvent.VerifyMembershipProof(System.String)">
            
        </member>
        <member name="T:PangeaCyber.Net.Audit.SearchRestriction">
            <kind>class</kind>
            <summary>
            SearchRestriction
            </summary>
        </member>
        <member name="P:PangeaCyber.Net.Audit.SearchRestriction.Actor">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.SearchRestriction.source">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.SearchRestriction.target">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.SearchRestriction.status">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.SearchRestriction.action">
            
        </member>
        <member name="T:PangeaCyber.Net.Audit.StandardEvent">
            <kind>class</kind>
            <summary>
            Event
            </summary>
        </member>
        <member name="P:PangeaCyber.Net.Audit.StandardEvent.Actor">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.StandardEvent.Action">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.StandardEvent.Message">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.StandardEvent.NewField">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.StandardEvent.Old">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.StandardEvent.Source">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.StandardEvent.Status">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.StandardEvent.Target">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.StandardEvent.Timestamp">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.StandardEvent.#ctor(PangeaCyber.Net.Audit.StandardEvent.Builder)">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.StandardEvent.#ctor(System.String)">
            
        </member>
        <member name="T:PangeaCyber.Net.Audit.StandardEvent.Builder">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.StandardEvent.Builder.Actor">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.StandardEvent.Builder.Action">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.StandardEvent.Builder.Message">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.StandardEvent.Builder.NewField">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.StandardEvent.Builder.Old">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.StandardEvent.Builder.Source">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.StandardEvent.Builder.Status">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.StandardEvent.Builder.Target">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.StandardEvent.Builder.Timestamp">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.StandardEvent.Builder.TenantID">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.StandardEvent.Builder.#ctor(System.String)">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.StandardEvent.Builder.WithActor(System.String)">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.StandardEvent.Builder.WithAction(System.String)">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.StandardEvent.Builder.WithNewField(System.String)">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.StandardEvent.Builder.WithOld(System.String)">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.StandardEvent.Builder.WithSource(System.String)">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.StandardEvent.Builder.WithStatus(System.String)">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.StandardEvent.Builder.WithTarget(System.String)">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.StandardEvent.Builder.WithTimestamp(System.String)">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.StandardEvent.Builder.WithTenantID(System.String)">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.StandardEvent.Builder.Build">
            
        </member>
        <member name="T:PangeaCyber.Net.Audit.Verifier">
            <kind>class</kind>
            <summary>
            Verifier
            </summary>
        </member>
        <member name="M:PangeaCyber.Net.Audit.Verifier.Verify(System.String,System.String,System.String)">
                   
        </member>
        <member name="T:PangeaCyber.Net.Audit.LogRequest">
            <kind>class</kind>
            <summary>
            LogRequest
            </summary>
        </member>
        <member name="P:PangeaCyber.Net.Audit.LogRequest.event">
                   
        </member>
        <member name="P:PangeaCyber.Net.Audit.LogRequest.Verbose">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.LogRequest.Signature">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.LogRequest.PublicKey">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.LogRequest.PrevRoot">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.LogRequest.#ctor(PangeaCyber.Net.Audit.IEvent,System.Boolean,System.String,System.String,System.String)">
            
        </member>
        <member name="T:PangeaCyber.Net.Audit.ResultRequest">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.ResultRequest.Id">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.ResultRequest.Limit">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.ResultRequest.Offset">
            
        </member>
        <member name="T:PangeaCyber.Net.Audit.ResultRequest.Builder">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.ResultRequest.Builder.Id">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.ResultRequest.Builder.Limit">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.ResultRequest.Builder.Offset">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.ResultRequest.Builder.#ctor(System.String)">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.ResultRequest.Builder.WithLimit(System.Nullable{System.Int32})">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.ResultRequest.Builder.WithOffset(System.Nullable{System.Int32})">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.ResultRequest.Builder.Build">
            
        </member>
        <member name="T:PangeaCyber.Net.Audit.RootRequest">
            <kind>class</kind>
            <summary>
            RootRequest
            </summary>
        </member>
        <member name="F:PangeaCyber.Net.Audit.RootRequest.TreeSize">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.RootRequest.#ctor(System.Nullable{System.Int32})">
            
        </member>
        <member name="T:PangeaCyber.Net.Audit.SearchRequest">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.SearchRequest.Query">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.SearchRequest.Order">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.SearchRequest.OrderBy">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.SearchRequest.Start">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.SearchRequest.End">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.SearchRequest.Limit">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.SearchRequest.MaxResults">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.SearchRequest.SearchRestriction">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.SearchRequest.Verbose">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.SearchRequest.#ctor(PangeaCyber.Net.Audit.SearchRequest.Builder)">
            
        </member>
        <member name="T:PangeaCyber.Net.Audit.SearchRequest.Builder">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.SearchRequest.Builder.Query">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.SearchRequest.Builder.Order">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.SearchRequest.Builder.OrderBy">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.SearchRequest.Builder.Start">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.SearchRequest.Builder.End">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.SearchRequest.Builder.Limit">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.SearchRequest.Builder.MaxResults">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.SearchRequest.Builder.SearchRestriction">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.SearchRequest.Builder.Verbose">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.SearchRequest.Builder.#ctor(System.String)">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.SearchRequest.Builder.WithOrder(System.String)">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.SearchRequest.Builder.WithOrderBy(System.String)">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.SearchRequest.Builder.WithStart(System.String)">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.SearchRequest.Builder.WithEnd(System.String)">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.SearchRequest.Builder.WithLimit(System.Nullable{System.Int32})">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.SearchRequest.Builder.WithMaxResults(System.Nullable{System.Int32})">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.SearchRequest.Builder.WithSearchRestriction(PangeaCyber.Net.Audit.SearchRestriction)">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.SearchRequest.Builder.WithVerbose(System.Nullable{System.Boolean})">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.SearchRequest.Builder.Build">
            
        </member>
        <member name="T:PangeaCyber.Net.Audit.LogResult">
            <kind>class</kind>
            <summary>
            LogResult
            </summary>
        </member>
        <member name="P:PangeaCyber.Net.Audit.LogResult.RawEnvelope">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.LogResult.EventEnvelope">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.LogResult.Hash">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.LogResult.UnpublishedRoot">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.LogResult.MembershipProof">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.LogResult.ConsistencyProof">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.LogResult.MembershipVerification">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.LogResult.ConsistencyVerification">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.LogResult.SignatureVerification">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.LogResult.VerifySignature">
            
        </member>
        <member name="T:PangeaCyber.Net.Audit.ResultsOutput">
            <kind>class</kind>
            <summary>
            ResultsOutput
            </summary>
        </member>
        <member name="P:PangeaCyber.Net.Audit.ResultsOutput.Count">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.ResultsOutput.Events">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.ResultsOutput.Root">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.ResultsOutput.UnpublishedRoot">
            
        </member>
        <member name="T:PangeaCyber.Net.Audit.RootResult">
            <kind>class</kind>
            <summary>
            RootResult
            </summary>
        </member>
        <member name="P:PangeaCyber.Net.Audit.RootResult.Root">
            
        </member>
        <member name="T:PangeaCyber.Net.Audit.SearchOutput">
            <kind>class</kind>
            <summary>
            SearchOutput
            </summary>
        </member>
        <member name="P:PangeaCyber.Net.Audit.SearchOutput.ID">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.SearchOutput.ExpiresAt">
            
        </member>
        <member name="T:PangeaCyber.Net.Audit.Utils.ConsistencyProof">
            <kind>class</kind>
            <summary>
            ConsistencyProof
            </summary>
        </member>
        <member name="T:PangeaCyber.Net.Audit.Utils.ConsistencyProofItem">
            <kind>class</kind>
            <summary>
            ConsistencyProof
            </summary>
        </member>
        <member name="P:PangeaCyber.Net.Audit.Utils.ConsistencyProofItem.Hash">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.Utils.ConsistencyProofItem.MembershipProof">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.Utils.ConsistencyProofItem.#ctor(System.String,System.String)">
            
        </member>
        <member name="T:PangeaCyber.Net.Audit.Utils.Hash">
            <kind>class</kind>
            <summary>
            Hash
            </summary>
        </member>
        <member name="M:PangeaCyber.Net.Audit.Utils.Hash.GetHash(System.String)">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.Utils.Hash.Unhexlify(System.String)">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.Utils.Hash.Decode(System.String)">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.Utils.Hash.GetHash(System.Byte[],System.Byte[])">
            
        </member>
        <member name="T:PangeaCyber.Net.Audit.Utils.MembershipProof">
            <kind>class</kind>
            <summary>
            MembershipProof
            </summary>
        </member>
        <member name="T:PangeaCyber.Net.Audit.Utils.MembershipProofItem">
            <kind>class</kind>
            <summary>
            MembershipProofItem
            </summary>
        </member>
        <member name="P:PangeaCyber.Net.Audit.Utils.MembershipProofItem.Side">
            
        </member>
        <member name="P:PangeaCyber.Net.Audit.Utils.MembershipProofItem.Hash">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.Utils.MembershipProofItem.#ctor(System.String,System.Byte[])">
            
        </member>
        <member name="T:PangeaCyber.Net.Audit.Utils.Verification">
            <kind>class</kind>
            <summary>
            Verification
            </summary>
        </member>
        <member name="M:PangeaCyber.Net.Audit.Utils.Verification.VerifyMembershipProof(System.String,System.String,System.String)">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.Utils.Verification.DecodeMembershipProof(System.String)">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.Utils.Verification.DecodeConsistencyProof(System.String[])">
            
        </member>
        <member name="M:PangeaCyber.Net.Audit.Utils.Verification.VerifyConsistencyProof(System.String,System.String,PangeaCyber.Net.Audit.Utils.ConsistencyProof)">
            
        </member>
        <member name="T:PangeaCyber.Net.EventVerification">
            <kind>enum</kind>
            <summary>
            EventVerification
            </summary>
        </member>
        <member name="F:PangeaCyber.Net.EventVerification.Success">
            
        </member>
        <member name="F:PangeaCyber.Net.EventVerification.Failed">
                   
        </member>
        <member name="F:PangeaCyber.Net.EventVerification.NotVerified">
                   
        </member>
        <member name="T:PangeaCyber.Net.BaseRequest">
            
        </member>
        <member name="P:PangeaCyber.Net.BaseRequest.ConfigID">
            
        </member>
        <member name="M:PangeaCyber.Net.BaseRequest.#ctor">
            
        </member>
        <member name="T:PangeaCyber.Net.Client">
            <kind>class</kind>
            <summary>
            Client
            </summary>
        </member>
        <member name="F:PangeaCyber.Net.Client.config">
            
        </member>
        <member name="F:PangeaCyber.Net.Client.serviceName">
            
        </member>
        <member name="F:PangeaCyber.Net.Client.SupportMultiConfig">
            
        </member>
        <member name="F:PangeaCyber.Net.Client.HttpClient">
            
        </member>
        <member name="F:PangeaCyber.Net.Client.userAgent">
            
        </member>
        <member name="T:PangeaCyber.Net.Client.ClientBuilder">
            
        </member>
        <member name="P:PangeaCyber.Net.Client.ClientBuilder.config">
            
        </member>
        <member name="M:PangeaCyber.Net.Client.ClientBuilder.#ctor(PangeaCyber.Net.Config)">
            
        </member>
        <member name="M:PangeaCyber.Net.Client.#ctor(PangeaCyber.Net.Client.ClientBuilder,System.String,System.Boolean)">
            
        </member>
        <member name="M:PangeaCyber.Net.Client.DoPost``1(System.String,PangeaCyber.Net.BaseRequest)">
            
        </member>
        <member name="M:PangeaCyber.Net.Client.CheckResponse``1(System.Net.Http.HttpResponseMessage)">
            
        </member>
        <member name="T:PangeaCyber.Net.Config">
            <kind>class</kind>
            <summary>
            Config
            </summary>
        </member>
        <member name="F:PangeaCyber.Net.Config.Version">
            <summary>
            Version of the package.
            </summary>
            <value>Version of the package.</value>
        </member>
        <member name="M:PangeaCyber.Net.Config.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:PangeaCyber.Net.Config" /> class
            </summary>
        </member>
        <member name="P:PangeaCyber.Net.Config.Token">
                   
        </member>
        <member name="P:PangeaCyber.Net.Config.Domain">
                   
        </member>
        <member name="P:PangeaCyber.Net.Config.ConfigID">
            
        </member>
        <member name="P:PangeaCyber.Net.Config.Environment">
                   
        </member>
        <member name="P:PangeaCyber.Net.Config.Insecure">
            
        </member>
        <member name="P:PangeaCyber.Net.Config.ConnectionTimeout">
                   
        </member>
        <member name="P:PangeaCyber.Net.Config.CustomUserAgent">
            
        </member>
        <member name="M:PangeaCyber.Net.Config.GetServiceUrl(System.String,System.String)">
            
        </member>
        <member name="M:PangeaCyber.Net.Config.GetTestDomain(PangeaCyber.Net.TestEnvironment)">
            
        </member>
        <member name="M:PangeaCyber.Net.Config.FromEnvironment(System.String)">
            
        </member>
        <member name="M:PangeaCyber.Net.Config.FromIntegrationEnvironment(PangeaCyber.Net.TestEnvironment)">
            
        </member>
        <member name="M:PangeaCyber.Net.Config.FromVaultIntegrationEnvironment(PangeaCyber.Net.TestEnvironment)">
            
        </member>
        <member name="M:PangeaCyber.Net.Config.FromCustomSchemaIntegrationEnvironment(PangeaCyber.Net.TestEnvironment)">
            
        </member>
        <member name="M:PangeaCyber.Net.Config.GetTestToken(PangeaCyber.Net.TestEnvironment)">
            
        </member>
        <member name="M:PangeaCyber.Net.Config.GetVaultSignatureTestToken(PangeaCyber.Net.TestEnvironment)">
            
        </member>
        <member name="M:PangeaCyber.Net.Config.GetMultiConfigTestToken(PangeaCyber.Net.TestEnvironment)">
            
        </member>
        <member name="M:PangeaCyber.Net.Config.GetCustomSchemaTestToken(PangeaCyber.Net.TestEnvironment)">
            
        </member>
        <member name="M:PangeaCyber.Net.Config.GetConfigID(PangeaCyber.Net.TestEnvironment,System.String,System.Int32)">
            
        </member>
        <member name="T:PangeaCyber.Net.Embargo.EmbargoClient">
            
        </member>
        <member name="M:PangeaCyber.Net.Embargo.EmbargoClient.#ctor(PangeaCyber.Net.Embargo.EmbargoClient.Builder)">
            
        </member>
        <member name="T:PangeaCyber.Net.Embargo.EmbargoClient.Builder">
            
        </member>
        <member name="M:PangeaCyber.Net.Embargo.EmbargoClient.Builder.#ctor(PangeaCyber.Net.Config)">
            
        </member>
        <member name="M:PangeaCyber.Net.Embargo.EmbargoClient.Builder.Build">
            
        </member>
        <member name="M:PangeaCyber.Net.Embargo.EmbargoClient.ISOCheck(System.String)">
            
        </member>
        <member name="M:PangeaCyber.Net.Embargo.EmbargoClient.IPCheck(System.String)">
            
        </member>
        <member name="T:PangeaCyber.Net.Embargo.EmbargoSanction">
            
        </member>
        <member name="P:PangeaCyber.Net.Embargo.EmbargoSanction.EmbargoedCountryISOCode">
            
        </member>
        <member name="P:PangeaCyber.Net.Embargo.EmbargoSanction.IssuingCountry">
            
        </member>
        <member name="P:PangeaCyber.Net.Embargo.EmbargoSanction.ListName">
            
        </member>
        <member name="P:PangeaCyber.Net.Embargo.EmbargoSanction.EmbargoedCountryName">
            
        </member>
        <member name="P:PangeaCyber.Net.Embargo.EmbargoSanction.Annotations">
            
        </member>
        <member name="T:PangeaCyber.Net.Embargo.EmbargoSanctionAnnotation">
            
        </member>
        <member name="P:PangeaCyber.Net.Embargo.EmbargoSanctionAnnotation.Reference">
            
        </member>
        <member name="P:PangeaCyber.Net.Embargo.EmbargoSanctionAnnotation.RestrictionName">
            
        </member>
        <member name="T:PangeaCyber.Net.Embargo.EmbargoSanctionAnnotationReference">
            
        </member>
        <member name="P:PangeaCyber.Net.Embargo.EmbargoSanctionAnnotationReference.Paragraph">
            
        </member>
        <member name="P:PangeaCyber.Net.Embargo.EmbargoSanctionAnnotationReference.Regulation">
            
        </member>
        <member name="T:PangeaCyber.Net.Embargo.EmbargoSanctions">
            
        </member>
        <member name="P:PangeaCyber.Net.Embargo.EmbargoSanctions.Count">
            
        </member>
        <member name="P:PangeaCyber.Net.Embargo.EmbargoSanctions.Sanctions">
            
        </member>
        <member name="T:PangeaCyber.Net.Embargo.IPCheckRequest">
            
        </member>
        <member name="P:PangeaCyber.Net.Embargo.IPCheckRequest.IP">
            
        </member>
        <member name="M:PangeaCyber.Net.Embargo.IPCheckRequest.#ctor(System.String)">
            
        </member>
        <member name="T:PangeaCyber.Net.Embargo.ISOCheckRequest">
            
        </member>
        <member name="P:PangeaCyber.Net.Embargo.ISOCheckRequest.IsoCode">
            
        </member>
        <member name="M:PangeaCyber.Net.Embargo.ISOCheckRequest.#ctor(System.String)">
            
        </member>
        <member name="T:PangeaCyber.Net.ErrorField">
            <kind>class</kind>
            <summary>
            ErrorField
            </summary>
        </member>
        <member name="P:PangeaCyber.Net.ErrorField.Code">
            
        </member>
        <member name="P:PangeaCyber.Net.ErrorField.Detail">
            
        </member>
        <member name="P:PangeaCyber.Net.ErrorField.Source">
            
        </member>
        <member name="P:PangeaCyber.Net.ErrorField.Path">
            
        </member>
        <member name="T:PangeaCyber.Net.Exceptions.AuditException">
            <kind>class</kind>
            <summary>
            AuditException
            </summary>
        </member>
        <member name="M:PangeaCyber.Net.Exceptions.AuditException.#ctor(System.String,System.Exception)">
            
        </member>
        <member name="T:PangeaCyber.Net.Exceptions.ConfigException">
            <kind>class</kind>
            <summary>
            Config
            </summary>
        </member>
        <member name="M:PangeaCyber.Net.Exceptions.ConfigException.#ctor(System.String)">
            
        </member>
        <member name="T:PangeaCyber.Net.Exceptions.EmbargoIPNotFoundException">
            <kind>class</kind>
            <summary>
            EmbargoIPNotFoundException
            </summary>
        </member>
        <member name="M:PangeaCyber.Net.Exceptions.EmbargoIPNotFoundException.#ctor(System.String,PangeaCyber.Net.Response{PangeaCyber.Net.PangeaErrors})">
            
        </member>
        <member name="T:PangeaCyber.Net.Exceptions.InternalServiceErrorException">
            <kind>class</kind>
            <summary>
            InternalServiceErrorException
            </summary>
        </member>
        <member name="M:PangeaCyber.Net.Exceptions.InternalServiceErrorException.#ctor(System.String,PangeaCyber.Net.Response{PangeaCyber.Net.PangeaErrors})">
            
        </member>
        <member name="T:PangeaCyber.Net.Exceptions.MissingConfigID">
            <kind>class</kind>
            <summary>
            MissingConfigID
            </summary>
        </member>
        <member name="M:PangeaCyber.Net.Exceptions.MissingConfigID.#ctor(System.String,PangeaCyber.Net.Response{PangeaCyber.Net.PangeaErrors})">
            
        </member>
        <member name="T:PangeaCyber.Net.Exceptions.NoCreditException">
            <kind>class</kind>
            <summary>
            NoCreditException
            </summary>
        </member>
        <member name="M:PangeaCyber.Net.Exceptions.NoCreditException.#ctor(System.String,PangeaCyber.Net.Response{PangeaCyber.Net.PangeaErrors})">
            
        </member>
        <member name="T:PangeaCyber.Net.Exceptions.PangeaAPIException">
            <kind>class</kind>
            <summary>
            NoCreditException
            </summary>
        </member>
        <member name="P:PangeaCyber.Net.Exceptions.PangeaAPIException.Response">
            
        </member>
        <member name="M:PangeaCyber.Net.Exceptions.PangeaAPIException.#ctor(System.String,PangeaCyber.Net.Response{PangeaCyber.Net.PangeaErrors})">
            
        </member>
        <member name="T:PangeaCyber.Net.Exceptions.PangeaException">
            <kind>class</kind>
            <summary>
            PangeaException
            </summary>
        </member>
        <member name="P:PangeaCyber.Net.Exceptions.PangeaException.Cause">
            
        </member>
        <member name="M:PangeaCyber.Net.Exceptions.PangeaException.#ctor(System.String,System.Exception)">
            
        </member>
        <member name="T:PangeaCyber.Net.Exceptions.ParseResultFailed">
            <kind>class</kind>
            <summary>
            ParseResultFailed
            </summary>
        </member>
        <member name="P:PangeaCyber.Net.Exceptions.ParseResultFailed.Header">
            
        </member>
        <member name="M:PangeaCyber.Net.Exceptions.ParseResultFailed.#ctor(System.String,System.Exception,PangeaCyber.Net.ResponseHeader,System.String)">
            
        </member>
        <member name="T:PangeaCyber.Net.Exceptions.ProviderErrorException">
            <kind>class</kind>
            <summary>
            ProviderErrorException
            </summary>
        </member>
        <member name="M:PangeaCyber.Net.Exceptions.ProviderErrorException.#ctor(System.String,PangeaCyber.Net.Response{PangeaCyber.Net.PangeaErrors})">
            
        </member>
        <member name="T:PangeaCyber.Net.Exceptions.RateLimitException">
            <kind>class</kind>
            <summary>
            RateLimitException
            </summary>
        </member>
        <member name="M:PangeaCyber.Net.Exceptions.RateLimitException.#ctor(System.String,PangeaCyber.Net.Response{PangeaCyber.Net.PangeaErrors})">
            
        </member>
        <member name="T:PangeaCyber.Net.Exceptions.ServiceNotAvailableException">
            <kind>class</kind>
            <summary>
            ServiceNotAvailableException
            </summary>
        </member>
        <member name="M:PangeaCyber.Net.Exceptions.ServiceNotAvailableException.#ctor(System.String,PangeaCyber.Net.Response{PangeaCyber.Net.PangeaErrors})">
            
        </member>
        <member name="T:PangeaCyber.Net.Exceptions.ServiceNotEnabledException">
            <kind>class</kind>
            <summary>
            ServiceNotEnabledException
            </summary>
        </member>
        <member name="M:PangeaCyber.Net.Exceptions.ServiceNotEnabledException.#ctor(System.String,PangeaCyber.Net.Response{PangeaCyber.Net.PangeaErrors})">
            
        </member>
        <member name="T:PangeaCyber.Net.Exceptions.SignerException">
            <kind>class</kind>
            <summary>
            SignerException
            </summary>
        </member>
        <member name="M:PangeaCyber.Net.Exceptions.SignerException.#ctor(System.String,System.Exception)">
            
        </member>
        <member name="T:PangeaCyber.Net.Exceptions.UnauthorizedException">
            <kind>class</kind>
            <summary>
            UnauthorizedException
            </summary>
        </member>
        <member name="M:PangeaCyber.Net.Exceptions.UnauthorizedException.#ctor(System.String,PangeaCyber.Net.Response{PangeaCyber.Net.PangeaErrors})">
            
        </member>
        <member name="T:PangeaCyber.Net.Exceptions.ValidationException">
            <kind>class</kind>
            <summary>
            ValidationException
            </summary>
        </member>
        <member name="M:PangeaCyber.Net.Exceptions.ValidationException.#ctor(System.String,PangeaCyber.Net.Response{PangeaCyber.Net.PangeaErrors})">
            
        </member>
        <member name="T:PangeaCyber.Net.Exceptions.VerificationFailed">
            <kind>class</kind>
            <summary>
            VerificationFailed
            </summary>
        </member>
        <member name="P:PangeaCyber.Net.Exceptions.VerificationFailed.Hash">
            
        </member>
        <member name="M:PangeaCyber.Net.Exceptions.VerificationFailed.#ctor(System.String,System.Exception,System.String)">
            
        </member>
        <member name="T:PangeaCyber.Net.PangeaErrors">
            <kind>class</kind>
            <summary>
            PangeaErrors
            </summary>
        </member>
        <member name="P:PangeaCyber.Net.PangeaErrors.Errors">
            
        </member>
        <member name="T:PangeaCyber.Net.Redact.RedactDebugReport">
            <kind>class</kind>
            <summary>
            RedactDebugReport
            </summary>
        </member>
        <member name="P:PangeaCyber.Net.Redact.RedactDebugReport.SummaryCounts">
            
        </member>
        <member name="P:PangeaCyber.Net.Redact.RedactDebugReport.RecognizerResults">
            
        </member>
        <member name="T:PangeaCyber.Net.Redact.RedactRecognizerResult">
            <kind>class</kind>
            <summary>
            RedactRecognizerResult
            </summary>
        </member>
        <member name="P:PangeaCyber.Net.Redact.RedactRecognizerResult.FieldType">
            
        </member>
        <member name="P:PangeaCyber.Net.Redact.RedactRecognizerResult.Score">
            
        </member>
        <member name="P:PangeaCyber.Net.Redact.RedactRecognizerResult.Text">
            
        </member>
        <member name="P:PangeaCyber.Net.Redact.RedactRecognizerResult.Start">
            
        </member>
        <member name="P:PangeaCyber.Net.Redact.RedactRecognizerResult.End">
            
        </member>
        <member name="P:PangeaCyber.Net.Redact.RedactRecognizerResult.Redacted">
            
        </member>
        <member name="P:PangeaCyber.Net.Redact.RedactRecognizerResult.DateKey">
            
        </member>
        <member name="T:PangeaCyber.Net.Redact.RedactClient">
            <kind>class</kind>
            <summary>
            Redact Client
            </summary>
        </member>
        <member name="F:PangeaCyber.Net.Redact.RedactClient.ServiceName">
            
        </member>
        <member name="F:PangeaCyber.Net.Redact.RedactClient.SupportMultiConfig">
            
        </member>
        <member name="M:PangeaCyber.Net.Redact.RedactClient.#ctor(PangeaCyber.Net.Redact.RedactClient.Builder)">
            Constructor
        </member>
        <member name="M:PangeaCyber.Net.Redact.RedactClient.RedactText(PangeaCyber.Net.Redact.RedactTextRequest)">
             <kind>method</kind>
             <summary>
             Redact sensitive information from provided text.
             </summary>
             <remarks>Redact sensitive information from provided text.</remarks>
             <param name="request" type="PangeaCyber.Net.Redact.RedactTextRequest">RedactRequest with text and optional parameters</param>
             <returns>Response&lt;RedactTextResult&gt;</returns>
             <exception cref="T:PangeaCyber.Net.Exceptions.PangeaException"></exception>
             <exception cref="T:PangeaCyber.Net.Exceptions.PangeaAPIException"></exception>
             <example>
             <code>
             var request = new RedactTextRequest.RequestTextBuilder("Jenny Jenny... 415-867-5309").Build();
             var response = await client.RedactText(request);
            
             </code>
             </example>
        </member>
        <member name="M:PangeaCyber.Net.Redact.RedactClient.RedactStructured(PangeaCyber.Net.Redact.RedactStructuredRequest)">
             <kind>method</kind>
             <summary>
             Redact sensitive information from provided structured data.
             </summary>
             <remarks>Redact sensitive information from structured data (e.g., JSON).</remarks>
             <param name="request" type="PangeaCyber.Net.Redact.RedactTextRequest">RedactRequest with structured data</param>
             <returns>Response&lt;RedactStructuredResult&gt;</returns>
             <exception cref="T:PangeaCyber.Net.Exceptions.PangeaException"></exception>
             <exception cref="T:PangeaCyber.Net.Exceptions.PangeaAPIException"></exception>
             <example>
             <code>
             var request = new RedactStructuredRequest.RequestStructureBuilder("Jenny Jenny... 415-867-5309").Build();
             var response = await client.RedactStructured(request);
            
             </code>
             </example>
        </member>
        <member name="T:PangeaCyber.Net.Redact.RedactClient.Builder">
            
        </member>
        <member name="M:PangeaCyber.Net.Redact.RedactClient.Builder.#ctor(PangeaCyber.Net.Config)">
            
        </member>
        <member name="M:PangeaCyber.Net.Redact.RedactClient.Builder.Build">
            
        </member>
        <member name="T:PangeaCyber.Net.Redact.RedactStructuredRequest">
            <kind>class</kind>
            <summary>
            RedactStructuredRequest
            </summary>
        </member>
        <member name="P:PangeaCyber.Net.Redact.RedactStructuredRequest.Data">
            
        </member>
        <member name="P:PangeaCyber.Net.Redact.RedactStructuredRequest.Jsonp">
            
        </member>
        <member name="P:PangeaCyber.Net.Redact.RedactStructuredRequest.Format">
            
        </member>
        <member name="P:PangeaCyber.Net.Redact.RedactStructuredRequest.Debug">
            
        </member>
        <member name="P:PangeaCyber.Net.Redact.RedactStructuredRequest.Rules">
            
        </member>
        <member name="P:PangeaCyber.Net.Redact.RedactStructuredRequest.ReturnResult">
            
        </member>
        <member name="M:PangeaCyber.Net.Redact.RedactStructuredRequest.#ctor(PangeaCyber.Net.Redact.RedactStructuredRequest.Builder)">
            
        </member>
        <member name="T:PangeaCyber.Net.Redact.RedactStructuredRequest.Builder">
            <kind>class</kind>
            <summary>
            RedactStructuredRequestBuilder
            </summary>
        </member>
        <member name="P:PangeaCyber.Net.Redact.RedactStructuredRequest.Builder.Data">
            
        </member>
        <member name="P:PangeaCyber.Net.Redact.RedactStructuredRequest.Builder.Jsonp">
            
        </member>
        <member name="P:PangeaCyber.Net.Redact.RedactStructuredRequest.Builder.Format">
            
        </member>
        <member name="P:PangeaCyber.Net.Redact.RedactStructuredRequest.Builder.Debug">
            
        </member>
        <member name="P:PangeaCyber.Net.Redact.RedactStructuredRequest.Builder.Rules">
            
        </member>
        <member name="P:PangeaCyber.Net.Redact.RedactStructuredRequest.Builder.ReturnResult">
            
        </member>
        <member name="M:PangeaCyber.Net.Redact.RedactStructuredRequest.Builder.#ctor(System.Object)">
            
        </member>
        <member name="M:PangeaCyber.Net.Redact.RedactStructuredRequest.Builder.WithJsonp(System.String[])">
            
        </member>
        <member name="M:PangeaCyber.Net.Redact.RedactStructuredRequest.Builder.WithFormat(System.String)">
            
        </member>
        <member name="M:PangeaCyber.Net.Redact.RedactStructuredRequest.Builder.WithDebug(System.Boolean)">
            
        </member>
        <member name="M:PangeaCyber.Net.Redact.RedactStructuredRequest.Builder.WithRules(System.String[])">
            
        </member>
        <member name="M:PangeaCyber.Net.Redact.RedactStructuredRequest.Builder.WithReturnResult(System.Boolean)">
            
        </member>
        <member name="M:PangeaCyber.Net.Redact.RedactStructuredRequest.Builder.Build">
            
        </member>
        <member name="T:PangeaCyber.Net.Redact.RedactTextRequest">
            <kind>class</kind>
            <summary>
            RedactTextRequest
            </summary>
        </member>
        <member name="P:PangeaCyber.Net.Redact.RedactTextRequest.Text">
            
        </member>
        <member name="P:PangeaCyber.Net.Redact.RedactTextRequest.Debug">
            
        </member>
        <member name="P:PangeaCyber.Net.Redact.RedactTextRequest.Rules">
            
        </member>
        <member name="P:PangeaCyber.Net.Redact.RedactTextRequest.ReturnResult">
            
        </member>
        <member name="M:PangeaCyber.Net.Redact.RedactTextRequest.#ctor(PangeaCyber.Net.Redact.RedactTextRequest.Builder)">
            
        </member>
        <member name="T:PangeaCyber.Net.Redact.RedactTextRequest.Builder">
            <kind>class</kind>
            <summary>
            RedactTextRequestBuilder
            </summary>
        </member>
        <member name="P:PangeaCyber.Net.Redact.RedactTextRequest.Builder.Text">
            
        </member>
        <member name="P:PangeaCyber.Net.Redact.RedactTextRequest.Builder.Debug">
            
        </member>
        <member name="P:PangeaCyber.Net.Redact.RedactTextRequest.Builder.Rules">
            
        </member>
        <member name="P:PangeaCyber.Net.Redact.RedactTextRequest.Builder.ReturnResult">
            
        </member>
        <member name="M:PangeaCyber.Net.Redact.RedactTextRequest.Builder.#ctor(System.String)">
            
        </member>
        <member name="M:PangeaCyber.Net.Redact.RedactTextRequest.Builder.WithDebug(System.Boolean)">
            
        </member>
        <member name="M:PangeaCyber.Net.Redact.RedactTextRequest.Builder.WithRules(System.String[])">
            
        </member>
        <member name="M:PangeaCyber.Net.Redact.RedactTextRequest.Builder.WithReturnResult(System.Boolean)">
            
        </member>
        <member name="M:PangeaCyber.Net.Redact.RedactTextRequest.Builder.Build">
            
        </member>
        <member name="T:PangeaCyber.Net.Redact.RedactStructuredResult">
            <kind>class</kind>
            <summary>
            RedactStructuredResult
            </summary>
        </member>
        <member name="P:PangeaCyber.Net.Redact.RedactStructuredResult.Count">
            
        </member>
        <member name="P:PangeaCyber.Net.Redact.RedactStructuredResult.Report">
            
        </member>
        <member name="P:PangeaCyber.Net.Redact.RedactStructuredResult.RedactedData">
            
        </member>
        <member name="T:PangeaCyber.Net.Redact.RedactTextResult">
            <kind>class</kind>
            <summary>
            RedactTextResult
            </summary>
        </member>
        <member name="P:PangeaCyber.Net.Redact.RedactTextResult.Count">
            
        </member>
        <member name="P:PangeaCyber.Net.Redact.RedactTextResult.Report">
            
        </member>
        <member name="P:PangeaCyber.Net.Redact.RedactTextResult.RedactedText">
            
        </member>
        <member name="T:PangeaCyber.Net.Response`1">
            <kind>class</kind>
            <summary>
            ResponseHeader
            </summary>
        </member>
        <member name="P:PangeaCyber.Net.Response`1.Result">
            
        </member>
        <member name="P:PangeaCyber.Net.Response`1.HttpResponse">
            
        </member>
        <member name="M:PangeaCyber.Net.Response`1.#ctor">
            
        </member>
        <member name="T:PangeaCyber.Net.ResponseHeader">
            <kind>class</kind>
            <summary>
            ResponseHeader
            </summary>
        </member>
        <member name="P:PangeaCyber.Net.ResponseHeader.RequestId">
            
        </member>
        <member name="P:PangeaCyber.Net.ResponseHeader.RequestTime">
            
        </member>
        <member name="P:PangeaCyber.Net.ResponseHeader.ResponseTime">
            
        </member>
        <member name="P:PangeaCyber.Net.ResponseHeader.Status">
            
        </member>
        <member name="P:PangeaCyber.Net.ResponseHeader.Summary">
            
        </member>
        <member name="P:PangeaCyber.Net.ResponseHeader.IsOK">
            
        </member>
        <member name="M:PangeaCyber.Net.ResponseHeader.#ctor">
            
        </member>
        <member name="T:PangeaCyber.Net.ResponseStatus">
            <kind>enum</kind>
            <summary>
            ResponseStatus
            </summary>
        </member>
        <member name="F:PangeaCyber.Net.ResponseStatus.Success">
            
        </member>
        <member name="F:PangeaCyber.Net.ResponseStatus.Failed">
            
        </member>
        <member name="F:PangeaCyber.Net.ResponseStatus.ValidationError">
            
        </member>
        <member name="F:PangeaCyber.Net.ResponseStatus.TooManyRequests">
            
        </member>
        <member name="F:PangeaCyber.Net.ResponseStatus.NoCredit">
            
        </member>
        <member name="F:PangeaCyber.Net.ResponseStatus.Unauthorized">
            
        </member>
        <member name="F:PangeaCyber.Net.ResponseStatus.ServiceNotEnabled">
            
        </member>
        <member name="F:PangeaCyber.Net.ResponseStatus.ProviderError">
            
        </member>
        <member name="F:PangeaCyber.Net.ResponseStatus.MissingConfigID">
            
        </member>
        <member name="F:PangeaCyber.Net.ResponseStatus.MissingConfigIDScope">
            
        </member>
        <member name="F:PangeaCyber.Net.ResponseStatus.ServiceNotAvailable">
            
        </member>
        <member name="F:PangeaCyber.Net.ResponseStatus.TreeNotFound">
            
        </member>
        <member name="F:PangeaCyber.Net.ResponseStatus.IPNotFound">
            
        </member>
        <member name="T:PangeaCyber.Net.TestEnvironment">
            <kind>enum</kind>
            <summary>
            TestEnvironment
            </summary>
        </member>
        <member name="F:PangeaCyber.Net.TestEnvironment.LVE">
            
        </member>
        <member name="F:PangeaCyber.Net.TestEnvironment.DEV">
            
        </member>
        <member name="F:PangeaCyber.Net.TestEnvironment.STG">
            
        </member>
        <member name="T:PangeaCyber.Net.OrderedContractResolver">
            
        </member>
        <member name="M:PangeaCyber.Net.OrderedContractResolver.CreateProperties(System.Type,Newtonsoft.Json.MemberSerialization)">
            
        </member>
    </members>
</doc>
