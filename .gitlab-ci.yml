default:
  tags:
    - pangea-internal

image:
  name: mcr.microsoft.com/dotnet/sdk:6.0
  entrypoint: [""]

.dotnet-sdk-base:
  cache:
    key: "$CI_JOB_STAGE-$CI_COMMIT_REF_SLUG"
    paths:
      - "./packages/pangea-sdk/PangeaCyber.Net/obj/project.assets.json"
      - "./packages/pangea-sdk/PangeaCyber.Net/obj/*.csproj.nuget.*"
      - ".nuget"
    policy: pull-push

  before_script:
    - cd packages/pangea-sdk
    - dotnet restore --packages .nuget
    - dotnet build --no-restore --configuration Release

.dotnet-sdk-test-base:
  stage: integration_tests
  cache:
    key: "$CI_JOB_STAGE-$CI_COMMIT_REF_SLUG"
    paths:
      - "./packages/pangea-sdk/PangeaCyber.Net/obj/project.assets.json"
      - "./packages/pangea-sdk/PangeaCyber.Net/obj/*.csproj.nuget.*"
      - ".nuget"
    policy: pull-push

  before_script:
    - echo $ENV
    - echo $CLOUD
  # Update environment variables
  # Domain
    - export PANGEA_INTEGRATION_DOMAIN_${ENV}="$(eval echo \$PANGEA_INTEGRATION_DOMAIN_${ENV}_${CLOUD})"
  # Tokens
    - export PANGEA_INTEGRATION_TOKEN_${ENV}="$(eval echo \$PANGEA_INTEGRATION_TOKEN_${ENV}_${CLOUD})"
    - export PANGEA_INTEGRATION_VAULT_TOKEN_${ENV}="$(eval echo \$PANGEA_INTEGRATION_VAULT_TOKEN_${ENV}_${CLOUD})"
    - export PANGEA_INTEGRATION_CUSTOM_SCHEMA_TOKEN_${ENV}="$(eval echo \$PANGEA_INTEGRATION_CUSTOM_SCHEMA_TOKEN_${ENV}_${CLOUD})"
    - export PANGEA_INTEGRATION_MULTI_CONFIG_TOKEN_${ENV}="$(eval echo \$PANGEA_INTEGRATION_MULTI_CONFIG_TOKEN_${ENV}_${CLOUD})"
  # Config IDs
    - export PANGEA_AUDIT_CONFIG_ID_1_${ENV}="$(eval echo \$PANGEA_AUDIT_CONFIG_ID_1_${ENV}_${CLOUD})"
    - export PANGEA_AUDIT_CONFIG_ID_2_${ENV}="$(eval echo \$PANGEA_AUDIT_CONFIG_ID_2_${ENV}_${CLOUD})"
    - export PANGEA_REDACT_CONFIG_ID_1_${ENV}="$(eval echo \$PANGEA_REDACT_CONFIG_ID_1_${ENV}_${CLOUD})"
    - export PANGEA_REDACT_CONFIG_ID_2_${ENV}="$(eval echo \$PANGEA_REDACT_CONFIG_ID_2_${ENV}_${CLOUD})"

    - cd packages/pangea-sdk
    - dotnet restore --packages .nuget
    - dotnet build --no-restore --configuration Release

  parallel:
    matrix:
      - CLOUD: [AWS, GCP]

  rules:
    - if: $CI_PIPELINE_SOURCE == "push"

dotnet-sdk-lint:
  extends: .dotnet-sdk-base
  stage: lint
  script:
    - dotnet format --verify-no-changes

dotnet-sdk-it-audit:
  extends: .dotnet-sdk-test-base
  variables:
    ENV: ${SERVICE_AUDIT_ENV}
  script:
    - dotnet test --no-restore --filter ITAuditTest
    - dotnet test --no-restore --filter SignerTest

dotnet-sdk-it-authn:
  extends: .dotnet-sdk-test-base
  variables:
    ENV: ${SERVICE_AUTHN_ENV}
  script:
    - dotnet test --no-restore --filter ITAuthNTest

dotnet-sdk-it-domain-intel:
  extends: .dotnet-sdk-test-base
  variables:
    ENV: ${SERVICE_DOMAIN_INTEL_ENV}
  script:
    - dotnet test --no-restore --filter ITDomainIntelTest

dotnet-sdk-it-embargo:
  extends: .dotnet-sdk-test-base
  variables:
    ENV: ${SERVICE_EMBARGO_ENV}
  script:
    - dotnet test --no-restore --filter ITEmbargoTest

dotnet-sdk-it-file-intel:
  extends: .dotnet-sdk-test-base
  variables:
    ENV: ${SERVICE_FILE_INTEL_ENV}
  script:
    - dotnet test --no-restore --filter ITFileIntelTest

dotnet-sdk-it-file-scan:
  extends: .dotnet-sdk-test-base
  variables:
    ENV: ${SERVICE_FILE_SCAN_ENV}
  script:
    - dotnet test --no-restore --filter ITFileScanTest

dotnet-sdk-it-ip-intel:
  extends: .dotnet-sdk-test-base
  variables:
    ENV: ${SERVICE_IP_INTEL_ENV}
  script:
    - dotnet test --no-restore --filter ITIPIntelTest

dotnet-sdk-it-redact:
  extends: .dotnet-sdk-test-base
  variables:
    ENV: ${SERVICE_REDACT_ENV}
  script:
    - dotnet test --no-restore --filter ITRedactTest

dotnet-sdk-it-url-intel:
  extends: .dotnet-sdk-test-base
  variables:
    ENV: ${SERVICE_URL_INTEL_ENV}
  script:
    - dotnet test --no-restore --filter ITURLIntelTest

dotnet-sdk-it-user-intel:
  extends: .dotnet-sdk-test-base
  variables:
    ENV: ${SERVICE_USER_INTEL_ENV}
  script:
    - dotnet test --no-restore --filter ITUserIntelTest

dotnet-sdk-it-vault:
  extends: .dotnet-sdk-test-base
  variables:
    ENV: ${SERVICE_VAULT_ENV}
  script:
    - dotnet test --no-restore --filter ITVaultTest

.dotnet-sdk-staging-tests:
  extends: .dotnet-sdk-test-base
  variables:
    ENV: STG
  # Set each service test environment
    SERVICE_AUDIT_ENV: STG
    SERVICE_AUTHN_ENV: STG
    SERVICE_EMBARGO_ENV: STG
    SERVICE_FILE_SCAN_ENV: STG
    SERVICE_IP_INTEL_ENV: STG
    SERVICE_DOMAIN_INTEL_ENV: STG
    SERVICE_URL_INTEL_ENV: STG
    SERVICE_FILE_INTEL_ENV: STG
    SERVICE_USER_INTEL_ENV: STG
    SERVICE_REDACT_ENV: STG
    SERVICE_VAULT_ENV: STG

  script:
    - dotnet test --no-restore

publish:
  extends: .dotnet-sdk-base
  stage: publish
  script:
    - curl -s https://gitlab.com/gitlab-org/incubation-engineering/mobile-devops/download-secure-files/-/raw/main/installer | bash
    - PACKAGE_VERSION=`cat VERSION`
    - dotnet pack ./PangeaCyber.Net/ -c Release --no-build --nologo  -o ./ -p:PackageVersion=$PACKAGE_VERSION
    - cp .secure_files/CodeSigning_CABundle.crt /usr/local/share/ca-certificates
    - update-ca-certificates
    - dotnet nuget sign ./PangeaCyber.Net/bin/Release/Pangea.SDK.$PACKAGE_VERSION.nupkg --timestamper http://timestamp.sectigo.com --certificate-path .secure_files/pangea.pfx -v d
    - dotnet nuget push ./PangeaCyber.Net/bin/Release/Pangea.SDK.$PACKAGE_VERSION.nupkg -s $NUGET_SOURCE -k $NUGET_API_KEY
    - rm -rf .secure_files
  artifacts:
    name: "$CI_COMMIT_REF_NAME"
    paths:
      - PangeaCyber.Net/bin/Release/Pangea.SDK.$PACKAGE_VERSION.nupkg
  rules:
    - if: $CI_COMMIT_BRANCH == "release"
      changes:
        - packages/pangea-sdk/**/*
      when: on_success

stages:
  - lint
  - integration_tests
  - publish
  - examples

include:
  - /examples/.examples-ci.yml
