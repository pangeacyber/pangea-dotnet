name: CI

on:
  push:
    branches:
      - main
      - beta

  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review

  merge_group:

  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages

jobs:
  prefetch:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v5.0.0

      - name: Setup .NET
        uses: actions/setup-dotnet@v5.0.0
        with:
          dotnet-version: 8
          cache: true
          cache-dependency-path: '**/packages.lock.json'

      - run: dotnet restore --locked-mode

  lint:
    needs: [prefetch]
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v5.0.0

      - name: Setup .NET
        uses: actions/setup-dotnet@v5.0.0
        with:
          dotnet-version: 8
          cache: true
          cache-dependency-path: '**/packages.lock.json'

      - run: dotnet format --verify-no-changes

  build-debug:
    needs: [prefetch]
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        dotnet-version: [8, 9]
    steps:
      - name: Checkout code
        uses: actions/checkout@v5.0.0

      - name: Setup .NET
        uses: actions/setup-dotnet@v5.0.0
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
          cache: true
          cache-dependency-path: '**/packages.lock.json'

      - name: Build
        run: dotnet build

  build-release:
    needs: [prefetch, build-debug]
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v5.0.0

      - name: Setup .NET
        uses: actions/setup-dotnet@v5.0.0
        with:
          dotnet-version: 8
          cache: true
          cache-dependency-path: '**/packages.lock.json'

      - name: Build
        run: dotnet build --configuration Release

      - name: Upload
        uses: actions/upload-artifact@v5.0.0
        with:
          name: pangea-dotnet-sdk-package
          path: ./packages/pangea-sdk/PangeaCyber.Net/bin/Release

  test-unit:
    needs: [prefetch, build-debug]
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v5.0.0

      - name: Setup .NET
        uses: actions/setup-dotnet@v5.0.0
        with:
          dotnet-version: 8
          cache: true
          cache-dependency-path: '**/packages.lock.json'

      - run: dotnet test packages/pangea-sdk/PangeaCyber.Tests

  test-integration:
    needs: [prefetch, build-debug]
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v5.0.0

      - run: corepack enable

      - name: Setup .NET
        uses: actions/setup-dotnet@v5.0.0
        with:
          dotnet-version: 8
          cache: true
          cache-dependency-path: '**/packages.lock.json'

      - run: bash dev/test.sh

  docs:
    needs: [build-release]
    runs-on: ubuntu-24.04
    defaults:
      run:
        working-directory: ./docs
    steps:
      - name: Checkout code
        uses: actions/checkout@v5.0.0

      - name: Setup .NET
        uses: actions/setup-dotnet@v5.0.0
        with:
          dotnet-version: 8
          cache: true
          cache-dependency-path: '**/packages.lock.json'

      - name: Enabled Corepack
        run: corepack enable

      - name: Setup Node.js
        uses: actions/setup-node@v6.0.0
        with:
          node-version: 24.10.0
          cache: yarn
          cache-dependency-path: ./docs/yarn.lock

      - name: Download locally built Pangea.SDK
        uses: actions/download-artifact@v6.0.0
        with:
          name: pangea-dotnet-sdk-package
          path: ./packages/pangea-sdk/PangeaCyber.Net/bin/Release

      - name: Install docfx
        run: dotnet tool install --global docfx --version 2.78.3

      - name: Run docfx
        run: docfx metadata docfx.json

      - name: Install dependencies
        run: yarn

      - name: Unit tests
        run: yarn test

      - name: Generate docs
        run: yarn generate

      - name: Upload
        uses: actions/upload-artifact@v5.0.0
        with:
          name: csharp_sdk.json
          path: ./docs/out/csharp_sdk.json
